#!/bin/bash

RED='\033[1;31m';GREEN='\033[0;32m';BLUE='\033[1;34m';LGREEN='\033[1;32m';WHITE='\033[1;37m';GRAY='\033[1;30m';NC='\033[0m'
PROJECT="CBR_SVK"
GITREPO='https://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@github.com/tatarintsevsv/CBR_SVK.git'
INSTALLFILES=("svkcompose"  "svkmain"  "svkpop3get"  "svkpop3list"  "svksmtp"  "svktelnet" "libconfig.so")

if [[ $UID != 0 ]]; then
    echo -e $RED $'\n' Скрипт должен запускаться с правами суперпользователя!  $NC
    echo -e $WHITE sudo $0 $* $NC
    read -n 1 -s
    echo -e $'\n\n'
    exit 1
fi
echo -e $WHITE Добро пожаловать в установщик $GREEN $PROJECT $WHITE $"\n" Сейчас будет произведена проверка системы, скачивание необходимых пакетов и компилирование исполняемых файлов проекта$NC
echo -e Если вы желаете самостоятельно собрать проект, репозиторий проекта вы можете найти по адресу $"\n" $GITREPO
echo -e Приступим... $"\n\n"

echo -e $BLUE Определение дистрибутива ОС $NC
osrelease=$(cat /etc/os-release)
echo -e Дистрибутив$LGREEN $(echo "$osrelease"|grep -E "^PRETTY_NAME="|cut -d= -f2)$NC
osid=$(echo "$osrelease"|grep -E "^ID="|cut -d= -f2)

dependencies=("libxml2" "libuuid" "cmake" "git")
deposbased=()
install_pkg=""
checkpkg=""

case "${osid//\"}" in
 "ubuntu" )
 echo Cемейство Ubuntu
 deposbased=("libcurl4" "libxml2-dev" "libcurl4-gnutls-dev" "build-essential")
 install_pkg="install_aptget" 
 pkgs_update='apt-get update'
 ;;
 "altlinux" )
 echo Семейство Alt Linux
 deposbased=("libcurl" "i586-libxml2-devel" "i586-libcurl-devel" "gcc" "gcc-c++" "libuuid-devel" "libstdc++-devel" "libstdc++-devel-static")
 install_pkg="install_aptget"
 pkgs_update='apt-get update'
 ;;
 "redos" )
 echo Семейство RedOS
 deposbased=("libcurl" "libxml2-devel" "libcurl-devel" "gcc" "gcc-c++" "libuuid-devel" "libstdc++-devel" "libstdc++-static" "libstdc++")
 install_pkg="install_yum"
 pkgs_update='yum -y update'
 ;;
esac
if [[ -z $install_pkg ]]; then
    echo -e $RED Данный дистрибутив не поддерживается. Компиляция и установка должны производиться вручную  $NC
    exit 1
fi
echo -e $'\n'$BLUE Обновление списка пакетов $NC
eval "$pkgs_update"

dependencies+=(${deposbased[@]})
missing_pkgs=()

install_aptget(){
echo -ne $GRAY
if apt-get -qq install $1; then
    echo -e $LGREEN Ok $NC
else
    echo -e $RED Ошибка установки $NC
    missing_pkgs+=$1
fi
}
install_yum(){
if yum list --installed | grep $1 > /dev/null 2>&1; then echo -e $LGREEN Ok $NC;return 0;fi
echo -ne $GRAY
if yum install -y $1; then
    echo -e $LGREEN Ok $NC
else
    echo -e $RED Ошибка установки $NC
    missing_pkgs+=($1)
fi
} 
echo -e $'\n'$BLUE Проверка необходимых для компиляции и установки пакетов в системе $NC

for item in ${dependencies[*]}
do
    echo -ne "- $item\t\t\t"
    eval $install_pkg $item    
done

if [ ${#missing_pkgs[*]} -gt 0 ]; then
    echo -ne $'\n' $RED В системе отсутствуют необходимые пакеты: $NC
    for item in ${missing_pkgs[*]}; do echo -ne " $item"; done
    echo $'\n'
    exit 1
fi
echo -e $GREEN Все необходимые пакеты установлены. Можно продолжать $NC
if [ -d "$PROJECT" ]; then
    echo -e $RED $'\n' Существующий каталог репозитория будет удален и склонирован заново  $NC
    rm -R $PROJECT
fi
echo -e $'\n'$BLUE Клонирование репозитория Git $NC
git clone $GITREPO
if [ $? -ne 0 ]; then
    echo -e $RED $'\n' При клонировании репозитория возникла ошибка. Продолжение невозможно! $NC
    exit 1
fi
cd $PROJECT
echo -e $'\n'$BLUE Конфигурирование проекта $NC
cmake .
if [ $? -ne 0 ]; then
    echo -e $RED $'\n' При конфигурировании проекта возникла ошибка. Продолжение невозможно! $NC
    exit 1
fi
echo -e $'\n'$BLUE Компиляция проекта $NC
make
if [ $? -ne 0 ]; then
    echo -e $RED $'\n' При компиляции проекта возникла ошибка. Продолжение невозможно! $NC
    exit 1
fi
echo -e $'\n'$BLUE Исполняемые файлы проекта скомпилированы в $WHITE $PWD/bin $NC 
read -p "Произвести установку в /opt? (Y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || exit 1
mkdir /opt/$PROJECT
echo -e $BLUE Копирование исполняемых файлов $NC
for item in ${INSTALLFILES[*]}
do
    echo -ne "- $item\t\t\t"
    if test -f "/opt/$PROJECT/$item"; then
        echo -ne $RED "(Перезапись существующего)" $NC
    fi
    yes | cp bin/$item /opt/$PROJECT
    if [ $? -ne 0 ]; then
	echo -e $RED Ошибка $NC
    else 
	echo -e $LGREEN Ok $NC
    fi
done
echo -e $BLUE Копирование дополнительных файлов $NC
cp -R contrib /opt/$PROJECT
echo -e $BLUE Удаление файлов git репозитория $NC
cd ..
rm -R ./$PROJECT 
echo -e $WHITE Примите поздравления! Файлы проекта успешно установлены в /opt/$PROJECT $NC
echo -e Рекомендуется ознакомиться с каталогом $WHITE /opt/$PROJECT/contrib $NC В нем содержатся примеры конфигурации, документация и полезные скрипты:
echo -e $WHITE commons $NC - Общие файлы конфигурации
echo -e $WHITE config $NC - Примеры файлов конфигурации
echo -e $WHITE doc $NC - Файлы документации
echo -e $WHITE script $NC - Скрипты установки/конфигурации/управления
    
