#!/bin/bash
#Black        0;30     Dark Gray     1;30
#Red          0;31     Light Red     1;31
#Green        0;32     Light Green   1;32
#Brown/Orange 0;33     Yellow        1;33
#Blue         0;34     Light Blue    1;34
#Purple       0;35     Light Purple  1;35
#Cyan         0;36     Light Cyan    1;36
#Light Gray   0;37     White         1;37

RED='\033[1;31m'
GREEN='\033[0;32m'
BLUE='\033[1;34m'
LGREEN='\033[1;32m'
WHITE='\033[1;37m'
NC='\033[0m'
PROJECT="CBR_SVK"
GITREPO='https://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@github.com/tatarintsevsv/CBR_SVK.git'
INSTALLFILES=("svkcompose"  "svkmain"  "svkpop3get"  "svkpop3list"  "svksmtp"  "svktelnet" "libconfig.so")

if [[ $UID != 0 ]]; then
    echo -e $RED $'\n' Скрипт должен запускаться с правами суперпользователя!  $NC
    echo -e $WHITE sudo $0 $* $NC
    exit 1
fi

is_apt=-1
dependencies=()
echo -e $BLUE Определение типа менеджера пакетов $NC
if [ -n "$(command -v yum)" ]; then
    echo -e Менеджер пакетов $GREEN YUM $NC
    dependencies=("libxml2" "libxml2-devel" "libcurl" "libcurl-devel" "gcc" "gcc-c++" "cmake" "git")
    is_apt=0
fi 
if [ -n "$(command -v apt-get)" ]; then
    echo -e Менеджер пакетов $GREEN APT $NC
    dependencies=("libxml2" "libxml2-dev" "libcurl" "libcurl4-gnutls-dev" "build-essential" "cmake" "git")
    is_apt=1
fi
if [ $is_apt -eq -1 ]; then
    echo -e $RED Неизвестный менеджер пакетов $NC
    exit 1
fi

check_pkg(){ if [ $is_apt = "1" ]; then check_apt_pkg $1; else check_yum_pkg $1; fi;}
check_yum_pkg(){  echo `yum list installed $1 | wc -l`; }
check_apt_pkg(){  echo `dpkg -l | grep $1 | wc -l`; }
install_pkg(){ if [ $is_apt = "1" ]; then install_apt_pkg $1; else install_yum_pkg $1; fi;}
install_apt_pkg(){
    sudo apt-get install $1
    return $?
}
install_yum_pkg(){
    sudo yum install $1
    echo $? 
}

echo -e $'\n'$BLUE Проверка необходимых для компиляции и установки пакетов в системе $NC
missing_pkgs=()
for item in ${dependencies[*]}
do
    echo -ne "- $item\t\t\t"
    if [ "$(check_pkg $item)" = 0 ]; then 
	echo -e $RED Отсутствует $NC
	missing_pkgs+=($item)
    else 
	echo -e $LGREEN Ok $NC
    fi
done
if [ ${#missing_pkgs[*]} -gt 0 ]; then
    echo -ne $'\n' $BLUE В системе отсутствуют необходимые пакеты: $NC
    for item in ${missing_pkgs[*]}; do echo -ne " $item"; done
    echo $'\n'
    read -p "Установить недостающие пакеты? (Y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || exit 1
    echo $'\n' Установка $'\n'    
    echo -e $
    for item in ${missing_pkgs[*]}
    do
        install_pkg $item
        if [ $? -ne 0 ]; then
            echo -e $RED $'\n' При установке пакета $item возникла ошибка. Продолжение невозможно! $NC
            exit 1
        fi
    done
fi
echo -e $GREEN Все необходимые пакеты установлены. Можно продолжать $NC
if [ -d "$PROJECT" ]; then
    echo -e $RED $'\n' Существующий каталог репозитория будет удален и склонирован заново  $NC
    rm -R $PROJECT
fi
echo -e $'\n'$BLUE Клонирование репозитория Git $NC
git clone $GITREPO
if [ $? -ne 0 ]; then
    echo -e $RED $'\n' При клонировании репозитория возникла ошибка. Продолжение невозможно! $NC
    exit 1
fi
cd $PROJECT
echo -e $'\n'$BLUE Конфигурирование проекта $NC
cmake .
if [ $? -ne 0 ]; then
    echo -e $RED $'\n' При конфигурировании проекта возникла ошибка. Продолжение невозможно! $NC
    exit 1
fi
echo -e $'\n'$BLUE Компиляция проекта $NC
make
if [ $? -ne 0 ]; then
    echo -e $RED $'\n' При компиляции проекта возникла ошибка. Продолжение невозможно! $NC
    exit 1
fi
echo -e $'\n'$BLUE Исполняемые файлы проекта скомпилированы в $WHITE $PWD/bin $BLUE проекта $NC 
read -p "Произвести установку в /opt? (Y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || exit 1
cd bin
mkdir /opt/$PROJECT
echo -e $BLUE Копирование файлов $NC
for item in ${INSTALLFILES[*]}
do
    echo -ne "- $item\t\t\t"
    if [ -d "/opt/$PROJECT/$item" ]; then
        echo -ne $RED "(Перезапись существующего)" $NC
    fi
    yes | cp $item /opt/$PROJECT
    if [ $? -ne 0 ]; then
	echo -e $RED Ошибка $NC
    else 
	echo -e $LGREEN Ok $NC
    fi
done
echo -e $BLUE Копирование завершено $NC
